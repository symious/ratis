/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
option java_package = "org.apache.ratis.proto.logservice";
option java_outer_classname = "LogServiceProtos";
option java_generate_equals_and_hash = true;
package ratis.logservice;

enum MessageType {
	READ_REQUEST = 0;
	READ_REPLY = 1;
	WRITE = 2;
}

message LogMessage {
	MessageType type = 1;
	string log_name = 2;
	uint64 length = 3;
	bytes  data = 4;
}
message LogServiceRequestProto {
  oneof Request {
    LogMessage logMessage = 1;
    CreateLogRequestProto createLog = 2;
    ListLogsRequestProto listLogs = 3;
    GetLogRequestProto getLog = 4;
    CloseLogRequestProto closeLog = 5;
    GetStateRequestProto getState = 6;
    ArchiveLogRequestProto archiveLog = 7;
    DeleteLogRequestProto deleteLog = 8;
  }
}

message LogNameProto {
  string name = 1;
}

message CreateLogRequestProto {
  LogNameProto logName = 1;
}

message ListLogsRequestProto {
  repeated LogStreamProto logSreams = 1;
}

message GetLogRequestProto {
  LogNameProto logName = 1;
}

message CloseLogRequestProto {
  LogNameProto logName = 1;
}

message GetStateRequestProto {
  LogNameProto logName = 1;
}

message ArchiveLogRequestProto {
  LogNameProto logName = 1;
}

message DeleteLogRequestProto {
  LogNameProto logName = 1;
}

message LogStreamProto {
  LogNameProto logName = 1;
  uint64 size = 2;
  LogStreamState state = 3;
}

enum LogStreamState {
  OPEN = 0;
  CLOSED = 1;
}

message CreateLogReplyProto {
  LogStreamProto logStream = 1;
}

message GetLogReplyProto {
  LogStreamProto logStream = 1;
}

message ListLogsReplyProto {
  repeated LogStreamProto logStrems = 1;
}

message CloseLogReplyProto {
}

message GetStateReplyProto {
  LogStreamState state = 1;
}

message ArchiveLogReplyProto {
}

message DeleteLogReplyProto {
}
