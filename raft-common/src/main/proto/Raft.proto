/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "org.apache.raft.proto";
option java_outer_classname = "RaftProtos";
option java_generate_equals_and_hash = true;
package common.raft;

message RaftPeerProto {
  required string id = 1;      // id of the peer
  required string address = 2; // e.g. IP address, hostname etc.
}

message ConfigurationMessageProto {
  repeated RaftPeerProto peers = 1; // the peers in the new configuration
}

message RaftConfigurationProto {
  repeated RaftPeerProto peers = 1; // the peers in the current or new conf
  repeated RaftPeerProto oldPeers = 2; // the peers in the old conf
}

message ClientMessageEntryProto {
  optional bytes content = 1;
}

message LogEntryProto {
  enum Type {
    CLIENT_MESSAGE = 1;
    CONFIGURATION = 2;
  }

  optional uint64 term = 1;
  optional uint64 index = 2;
  optional Type type = 3; // the type of the log entry

  optional ClientMessageEntryProto clientMessageEntry = 4;
  optional RaftConfigurationProto configurationEntry = 5;
}

message TermIndexProto {
  required uint64 term = 1;
  required uint64 index = 2;
}

message RaftRpcMessageProto {
  required string requestorId = 1;
  required string replyId = 2;
}

message RaftRpcRequestProto {
  required RaftRpcMessageProto rpcMessage = 1;
}

message RaftRpcReplyProto {
  required RaftRpcMessageProto rpcMessage = 1;
  required bool success = 2;
}
